package uz.gita.contact_app_with_firebase.data.repositoryimport android.content.Contextimport android.widget.Toastimport androidx.core.net.toUriimport com.google.firebase.firestore.FirebaseFirestoreimport com.google.firebase.storage.StorageReferenceimport dagger.hilt.android.qualifiers.ApplicationContextimport kotlinx.coroutines.flow.Flowimport uz.gita.contact_app_with_firebase.data.models.ContactParamimport uz.gita.contact_app_with_firebase.data.models.ContactRequestimport uz.gita.contact_app_with_firebase.domain.repository.AppRepositoryimport uz.gita.contact_app_with_firebase.utils.getAllLiveimport javax.inject.Injectclass AppRepository @Inject constructor(    private val fireStore: FirebaseFirestore,    @ApplicationContext private val context: Context,    private val storageReference: StorageReference,) : AppRepository {    override fun getAllContacts(): Flow<Result<List<ContactParam>>> =        fireStore.collection("members").getAllLive { documentSnapshot ->            ContactParam(                documentSnapshot.id,                documentSnapshot.getString("image") ?: "",                documentSnapshot.getString("name") ?: "",                documentSnapshot.getString("phone") ?: ""            )        }    override fun insertContact(image: String, name: String, phone: String) {        image.let {            storageReference.child("images/").putFile(it.toUri()).addOnSuccessListener { data ->                data.metadata?.reference?.downloadUrl?.addOnSuccessListener {                    fireStore.collection("members").add(ContactRequest(it.toString(), name, phone))                        .addOnSuccessListener {                            Toast.makeText(context, "Contact Added", Toast.LENGTH_SHORT).show()                        }.addOnFailureListener {                            Toast.makeText(context, "Fail", Toast.LENGTH_SHORT).show()                        }                }            }        }    }    override fun deleteContact(id: String) {        fireStore.collection("members").document(id).delete()    }    override fun updateContact(id: String, image: String, name: String, phone: String) {        fireStore.collection("members").document(id).set(ContactParam(id, image, name, phone))    }}