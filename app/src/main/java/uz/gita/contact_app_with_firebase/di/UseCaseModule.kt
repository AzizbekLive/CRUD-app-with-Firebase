package uz.gita.contact_app_with_firebase.diimport dagger.Bindsimport dagger.Moduleimport dagger.hilt.InstallInimport dagger.hilt.components.SingletonComponentimport uz.gita.contact_app_with_firebase.domain.usecase.DeleteUseCaseimport uz.gita.contact_app_with_firebase.domain.usecase.GetContactsUseCaseimport uz.gita.contact_app_with_firebase.domain.usecase.InsertContactUseCaseimport uz.gita.contact_app_with_firebase.domain.usecase.UpdateUseCaseimport uz.gita.contact_app_with_firebase.domain.usecase.impl.DeleteUseCaseImplimport uz.gita.contact_app_with_firebase.domain.usecase.impl.GetContactsUseCaseImplimport uz.gita.contact_app_with_firebase.domain.usecase.impl.InsertContactUseCaseImplimport uz.gita.contact_app_with_firebase.domain.usecase.impl.UpdateUseCaseImplimport javax.inject.Singleton@Module@InstallIn(SingletonComponent::class)interface UseCaseModule {    @[Binds Singleton]    fun bindsGetContactsUseCase(impl: GetContactsUseCaseImpl): GetContactsUseCase    @[Binds Singleton]    fun bindsInsertContactsUseCase(impl: InsertContactUseCaseImpl): InsertContactUseCase    @[Binds Singleton]    fun bindsDeleteContactUseCase(impl: DeleteUseCaseImpl): DeleteUseCase    @[Binds Singleton]    fun bindsUpdateContactUseCase(impl: UpdateUseCaseImpl): UpdateUseCase}